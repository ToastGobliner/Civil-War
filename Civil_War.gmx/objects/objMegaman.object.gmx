<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMegamanStand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprMegamanMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ground = true; //If we are on the ground
isStep = false; //Are we sidestepping?
stepTimer = 0;
initStep = true;
vel = 0; //Our current movement speed
canMinJump = true;
isShoot = false; //Are we currently shooting?

//Physics variables
grav = 0.25;
jumpSpeed = 5.55 + grav;
walkSpeed = 2.296875;
maxVspeed = 7;
stepSpeed = 1/7;
stepFrames = 7;

//Sprites
spriteStand = sprMegamanStand;
spriteStep = sprMegamanStep;
spriteJump = sprMegamanJump;
spriteWalk = sprMegamanWalk;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isShoot = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check if we are on the ground
if place_meeting(x, y+vspeed+1, objSolid)
    ground = true;
else
    ground = false;

//Movement
if ground == true
{
    if keyboard_check(vk_right) &amp;&amp; !place_meeting(x+vel+1, y, objSolid)
    {    
        if initStep == true
        {
            initStep = false;
            isStep = true;
            image_xscale = 1;
        }
        else if isStep == false
        {
            vel = walkSpeed;
            sprite_index = spriteWalk;
            image_speed = 0.15;
            image_xscale = 1;
        }
    }
    else if keyboard_check(vk_left) &amp;&amp; !place_meeting(x+vel-1, y, objSolid)
    {    
        if initStep == true
        {
            initStep = false;
            isStep = true;
            image_xscale = -1;
        }
        else if isStep == false
        {
            vel = -walkSpeed;
            sprite_index = spriteWalk;
            image_speed = 0.15;
            image_xscale = -1;
        }
    }
    else if isStep == false
    {
        stepTimer = 0;
        vel = 0;
        sprite_index = spriteStand;
        initStep = true;
    }
    
    
    //Sidestepping
    if isStep == true
    {
        vel = image_xscale * stepSpeed;
        sprite_index = spriteStep;
        
        stepTimer += 1;
        if stepTimer &gt;= stepFrames
        {
            stepTimer = 0;
            isStep = false;
        }
    }
}
else
{
    sprite_index = spriteJump;
    initStep = false;
    stepTimer = 0;
    isStep = false;
    
    if keyboard_check(vk_right) &amp;&amp; !place_meeting(x+vel+1, y, objSolid)
    {
        vel = walkSpeed;
        image_xscale = 1;
    }
    else if keyboard_check(vk_left) &amp;&amp; !place_meeting(x+vel-1, y, objSolid)
    {
        vel = -walkSpeed;
        image_xscale = -1;
    }
    else
    {
        vel = 0;
    }
}


//Allow movement
x += vel;


//Gravity
if ground == true
{
    gravity = 0;
    canMinJump = true;
}
else
{
    gravity = grav;
    if vspeed &gt; maxVspeed
        vspeed = maxVspeed;
}


//Jumping
if ground == true &amp;&amp; keyboard_check_pressed(ord('Z'))
{
    vspeed = -jumpSpeed;
    sprite_index = spriteJump;
    ground = false;
}


//Minjumping
if ground == false &amp;&amp; vspeed &lt; 0 &amp;&amp; canMinJump == true &amp;&amp; !keyboard_check(ord('Z'))
{
    canMinJump = false;
    vspeed = 0;
}


//Shooting
if keyboard_check_pressed(ord('X')) &amp;&amp; instance_number(objMegamanBullet) &lt; 3
{
    var box, ID;
    if image_xscale == -1
        box = bbox_left;
    else
        box = bbox_right;
        
    ID = instance_create(box+image_xscale*6, y+2, objMegamanBullet);
        ID.hspeed = image_xscale * 5;
    isShoot = true;
    alarm[0] = 20;
}


//Normal/shooting sprites
if isShoot == false
{
    spriteStand = sprMegamanStand;
    spriteStep = sprMegamanStep;
    spriteJump = sprMegamanJump;
    spriteWalk = sprMegamanWalk;
}
else
{
    spriteStand = sprMegamanStandShoot;
    spriteStep = sprMegamanStandShoot;
    spriteJump = sprMegamanJumpShoot;
    spriteWalk = sprMegamanWalkShoot;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSolid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid(direction, 12);
vspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawSelf();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
